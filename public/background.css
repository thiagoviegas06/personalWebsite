@import url('https://fonts.googleapis.com/css2?family=Share+Tech+Mono&display=swap');

body {
  height: 100vh;
  overflow: hidden;
  background-color: #000;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

h1, nav, button {
  color: green;
  font-family: 'Share Tech Mono', 'Cascadia Code', Menlo, Monaco, 'Courier New', monospace;
  filter: drop-shadow(0px 0px 5px currentColor);
}

h1 {
  font-size: 6rem;
  margin-bottom: 10px;
}

nav {
  font-size: 2rem;
  display: flex;
  justify-content: center;
  margin-top: 0;
}

nav a {
	color: green;
  text-decoration: none;
  padding: 15px;
  transition: color 0.3s, transform 0.3s;
}

nav a:hover {
  color: lime;
  transform: scale(1.2);
}

button {
  font-size: 2rem;
  background-color: #000;
  border: 2px solid green;
  padding: 10px 20px;
  cursor: pointer;
  margin-top: 20px;
  text-align: center;
}

button:hover {
  color: lime;
}

.table-container {
  text-align: center;
  margin-bottom: 20px;
}

table {
  border-collapse: collapse;
}

td {
  border: 2px solid green;
  padding: 10px;
}

#trueCell {
  background: green;
}

#falseCell {
  background: black;
}

.grid-container {
  --grid: 10rem;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  transform-style: preserve-3d;
  perspective: 100rem;
  animation: rotate 100s linear infinite forwards;
}

.grid-container .plane {
  --dir: 1;
  width: 300%;
  height: 150%;
  min-height: 70rem;
  position: absolute;
  bottom: 0;
  transform-style: preserve-3d;
  transform-origin: bottom center;
  transform: translateX(-50%) rotateX(85deg);
}

.grid-container .plane:last-child {
  --dir: -1;
  top: 0;
  transform-origin: top center;
  transform: translateX(-50%) rotateX(-85deg);
}

.grid-container .plane > * {
  transform-style: preserve-3d;
  height: 100%;
  width: 100%;
  position: absolute;
}

.grid-container .plane > *::before {
  content: '';
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  background-image: repeating-linear-gradient(
      to left,
      green,
      green 4px,
      transparent 4px,
      transparent var(--grid)
    ),
    repeating-linear-gradient(
      to bottom,
      green,
      green 4px,
      transparent 4px,
      transparent var(--grid)
    );
  animation: move 1s linear infinite forwards;
}

.grid-container .plane > *::after {
  content: '';
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 255) var(--grid), rgba(0, 0, 0, 0));
  z-index: 1;
  transform: translateZ(1px);
}

.grid-container .plane > * .glow {
  filter: blur(1rem);
  z-index: 1;
  mix-blend-mode: plus-lighter;
}

@keyframes move {
  from {
    transform: translateY(0px);
  }
  to {
    transform: translateY(calc(var(--grid) * var(--dir)));
  }
}

@keyframes blink {
  0%,
  50% {
    visibility: visible;
  }
  51%,
  100% {
    visibility: hidden;
  }
}
